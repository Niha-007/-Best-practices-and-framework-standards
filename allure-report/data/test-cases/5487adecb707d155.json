{"uid":"5487adecb707d155","name":"Locked out user should not be able to login","fullName":"Locked out user should not be able to login","historyId":"fc1cb84ba33ddaaeba76f48238fa7916","time":{"start":1731879430262,"stop":1731879430271,"duration":9},"description":"\n### Test\n```typescript\n() =>\n  __awaiter(void 0, void 0, void 0, function* () {\n    logger_1.logger.info(\"Starting locked out user test\");\n    yield loginPage.navigateToSite();\n    yield loginPage.login(\n      test_data_1.testData.credentials.lockedUser.username,\n      test_data_1.testData.credentials.lockedUser.password\n    );\n    yield askui_helper_1.aui.waitUntil(\n      askui_helper_1.aui\n        .expect()\n        .text(test_data_1.testData.lockedUserError)\n        .exists()\n    );\n    yield askui_helper_1.aui.annotate();\n    logger_1.logger.success(\n      \"Successfully verified locked out user cannot login\"\n    );\n  });\n\n```\n","descriptionHtml":"<h3>Test</h3>\n<pre><code class=\"language-typescript\">() =&gt;\n  __awaiter(void 0, void 0, void 0, function* () {\n    logger_1.logger.info(&quot;Starting locked out user test&quot;);\n    yield loginPage.navigateToSite();\n    yield loginPage.login(\n      test_data_1.testData.credentials.lockedUser.username,\n      test_data_1.testData.credentials.lockedUser.password\n    );\n    yield askui_helper_1.aui.waitUntil(\n      askui_helper_1.aui\n        .expect()\n        .text(test_data_1.testData.lockedUserError)\n        .exists()\n    );\n    yield askui_helper_1.aui.annotate();\n    logger_1.logger.success(\n      &quot;Successfully verified locked out user cannot login&quot;\n    );\n  });\n\n</code></pre>\n","status":"skipped","statusMessage":"Test is marked: \"skip\"","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"thread","value":"1"},{"name":"parentSuite","value":"C:"},{"name":"package","value":"C:"},{"name":"suite","value":"Users > 91957 > saucedemo_project > askui_example > purchase-test-error-user.test.ts"},{"name":"subSuite","value":"Sauce Demo Purchase Flow Tests"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"5487adecb707d155.json","parameterValues":[]}